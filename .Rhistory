radar.tmp1 = radar.tmp1 / sum(radar.tmp1)*100 ; radar.tmp2 = radar.tmp2 / sum(radar.tmp2)*100
radar.tmp3 = radar.tmp3 / sum(radar.tmp3)*100 ; radar.tmp4 = radar.tmp4 / sum(radar.tmp4)*100
radar.tmp=rbind(rep(30,15) ,rep(0,15) , radar.tmp1, radar.tmp2, radar.tmp3, radar.tmp4, c(30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)) }
if (angle=="abb" | angle == "bbc"){print("Test 1")
for (i in 1:nrow(tmp1)) { radar.tmp1[1,round((tmp1[i,19]-tmp1[i,12]+210)/10-9)%%36+1] = radar.tmp1[1,round((tmp1[i,19]-tmp1[i,12]+210)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp2)) { radar.tmp2[1,round((tmp2[i,19]-tmp2[i,12]+210)/10-9)%%36+1] = radar.tmp2[1,round((tmp2[i,19]-tmp2[i,12]+210)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp3)) { radar.tmp3[1,round((tmp1[i,19]-tmp3[i,12]+210)/10-9)%%36+1] = radar.tmp3[1,round((tmp1[i,19]-tmp1[i,12]+210)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp4)) { print(i); radar.tmp4[1,round((tmp2[i,19]-tmp4[i,12]+210)/10-9)%%36+1] = radar.tmp4[1,round((tmp2[i,19]-tmp2[i,12]+210)/10-9)%%36+1]+1 }
print("Test 2")
radar.tmp1 = radar.tmp1 / sum(radar.tmp1)*100 ; radar.tmp2 = radar.tmp2 / sum(radar.tmp2)*100
radar.tmp3 = radar.tmp3 / sum(radar.tmp3)*100 ; radar.tmp4 = radar.tmp4 / sum(radar.tmp4)*100
radar.tmp=rbind(rep(30,15) ,rep(0,15) , radar.tmp1, radar.tmp2 , radar.temp3, radar.tmp4 ,c(0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0)) }
if (angle=="bcc" | angle=="cca"){print("Test 1")
for (i in 1:nrow(tmp1)) { radar.tmp1[1,round((tmp1[i,19]-tmp1[i,13]+330)/10-9)%%36+1] = radar.tmp1[1,round((tmp1[i,19]-tmp1[i,13]+330)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp2)) { radar.tmp2[1,round((tmp2[i,19]-tmp2[i,13]+330)/10-9)%%36+1] = radar.tmp2[1,round((tmp2[i,19]-tmp2[i,13]+330)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp3)) { radar.tmp3[1,round((tmp3[i,19]-tmp3[i,13]+330)/10-9)%%36+1] = radar.tmp3[1,round((tmp3[i,19]-tmp1[i,13]+330)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp4)) { radar.tmp4[1,round((tmp4[i,19]-tmp4[i,13]+330)/10-9)%%36+1] = radar.tmp4[1,round((tmp4[i,19]-tmp2[i,13]+330)/10-9)%%36+1]+1 }
print("Test 2")
radar.tmp1 = radar.tmp1 / sum(radar.tmp1)*100 ; radar.tmp2 = radar.tmp2 / sum(radar.tmp2)*100
radar.tmp3 = radar.tmp3 / sum(radar.tmp3)*100 ; radar.tmp4 = radar.tmp4 / sum(radar.tmp4)*100
radar.tmp=rbind(rep(30,15) ,rep(0,15) , radar.tmp1, radar.tmp2, radar.temp3, radar.tmp4 ,c(0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0)) }
radarchart( radar.tmp  , axistype=1 ,
pcol=c(rgb(1,0,0,0.9),rgb(0,0,1,0.9),rgb(0,1,0,0.9),rgb(0,0,0,0.7),rgb(0,0,0)) , pfcol=c(rgb(1,0,0,0.7), rgb(0,0,1,0.5),rgb(0,1,0,0.3),rgb(0,0,0,0.1),rgb(0,0,0)) , #custom polygon
cglcol="grey", cglty=1, axislabcol="grey", seg=6, caxislabels=seq(0,30,5), cglwd=0.8, pty = 32, plty=1, plwd=c(1,1,1,1,3), #custom the grid
vlcex=0.8 , centerzero=TRUE, #custom labels
title = title )
}
radar3.angle(data, "delta propre", "droit", "abb", "abb delta propre")
radar3.angle <- function (data, zone, main, angle, title) {
if (angle=="aab"){
tmp1 = subset(data, type==zone & d.g==main & V21=="aab" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="aab" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="aab" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="aab" & V22==1.0) }
if (angle=="abb"){
tmp1 = subset(data, type==zone & d.g==main & V21=="abb" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="abb" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="abb" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="abb" & V22==1.0)}
if (angle=="bbc"){
tmp1 = subset(data, type==zone & d.g==main & V21=="bbc" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="bbc" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="bbc" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="bbc" & V22==1.0) }
if (angle=="bcc"){
tmp1 = subset(data, type==zone & d.g==main & V21=="bcc" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="bcc" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="bcc" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="bcc" & V22==1.0) }
if (angle=="cca"){
tmp1 = subset(data, type==zone & d.g==main & V21=="cca" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="cca" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="cca" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="cca" & V22==1.0) }
if (angle=="caa"){
tmp1 = subset(data, type==zone & d.g==main & V21=="caa" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="caa" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="caa" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="caa" & V22==1.0) }
print(nrow(tmp1));print(nrow(tmp2));print(nrow(tmp3));print(nrow(tmp4))
radar.tmp1 = as.data.frame(matrix(0,ncol=36)) ;colnames(radar.tmp1)=c(seq(90,350,10),seq(0,80,10))
radar.tmp2 = as.data.frame(matrix(0,ncol=36)) ;colnames(radar.tmp2)=c(seq(90,350,10),seq(0,80,10))
radar.tmp3 = as.data.frame(matrix(0,ncol=36)) ;colnames(radar.tmp3)=c(seq(90,350,10),seq(0,80,10))
radar.tmp4 = as.data.frame(matrix(0,ncol=36)) ;colnames(radar.tmp4)=c(seq(90,350,10),seq(0,80,10))
print("Test 0")
if (angle=="aab" | angle=="caa"){
for (i in tmp1[,19]) { radar.tmp1[1,round(i/10-9)%%36+1] = radar.tmp1[1,round(i/10-9)%%36+1]+1 }
for (i in tmp2[,19]) { radar.tmp2[1,round(i/10-9)%%36+1] = radar.tmp2[1,round(i/10-9)%%36+1]+1 }
for (i in tmp3[,19]) { radar.tmp3[1,round(i/10-9)%%36+1] = radar.tmp3[1,round(i/10-9)%%36+1]+1 }
for (i in tmp4[,19]) { radar.tmp4[1,round(i/10-9)%%36+1] = radar.tmp4[1,round(i/10-9)%%36+1]+1 }
radar.tmp1 = radar.tmp1 / sum(radar.tmp1)*100 ; radar.tmp2 = radar.tmp2 / sum(radar.tmp2)*100
radar.tmp3 = radar.tmp3 / sum(radar.tmp3)*100 ; radar.tmp4 = radar.tmp4 / sum(radar.tmp4)*100
radar.tmp=rbind(rep(30,15) ,rep(0,15) , radar.tmp1, radar.tmp2, radar.tmp3, radar.tmp4, c(30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)) }
if (angle=="abb" | angle == "bbc"){print("Test 1")
for (i in 1:nrow(tmp1)) { radar.tmp1[1,round((tmp1[i,19]-tmp1[i,12]+210)/10-9)%%36+1] = radar.tmp1[1,round((tmp1[i,19]-tmp1[i,12]+210)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp2)) { radar.tmp2[1,round((tmp2[i,19]-tmp2[i,12]+210)/10-9)%%36+1] = radar.tmp2[1,round((tmp2[i,19]-tmp2[i,12]+210)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp3)) { radar.tmp3[1,round((tmp3[i,19]-tmp3[i,12]+210)/10-9)%%36+1] = radar.tmp3[1,round((tmp3[i,19]-tmp3[i,12]+210)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp4)) { radar.tmp4[1,round((tmp4[i,19]-tmp4[i,12]+210)/10-9)%%36+1] = radar.tmp4[1,round((tmp4[i,19]-tmp4[i,12]+210)/10-9)%%36+1]+1 }
print("Test 2")
radar.tmp1 = radar.tmp1 / sum(radar.tmp1)*100 ; radar.tmp2 = radar.tmp2 / sum(radar.tmp2)*100
radar.tmp3 = radar.tmp3 / sum(radar.tmp3)*100 ; radar.tmp4 = radar.tmp4 / sum(radar.tmp4)*100
radar.tmp=rbind(rep(30,15) ,rep(0,15) , radar.tmp1, radar.tmp2 , radar.temp3, radar.tmp4 ,c(0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0)) }
if (angle=="bcc" | angle=="cca"){print("Test 1")
for (i in 1:nrow(tmp1)) { radar.tmp1[1,round((tmp1[i,19]-tmp1[i,13]+330)/10-9)%%36+1] = radar.tmp1[1,round((tmp1[i,19]-tmp1[i,13]+330)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp2)) { radar.tmp2[1,round((tmp2[i,19]-tmp2[i,13]+330)/10-9)%%36+1] = radar.tmp2[1,round((tmp2[i,19]-tmp2[i,13]+330)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp3)) { radar.tmp3[1,round((tmp3[i,19]-tmp3[i,13]+330)/10-9)%%36+1] = radar.tmp3[1,round((tmp3[i,19]-tmp3[i,13]+330)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp4)) { radar.tmp4[1,round((tmp4[i,19]-tmp4[i,13]+330)/10-9)%%36+1] = radar.tmp4[1,round((tmp4[i,19]-tmp4[i,13]+330)/10-9)%%36+1]+1 }
print("Test 2")
radar.tmp1 = radar.tmp1 / sum(radar.tmp1)*100 ; radar.tmp2 = radar.tmp2 / sum(radar.tmp2)*100
radar.tmp3 = radar.tmp3 / sum(radar.tmp3)*100 ; radar.tmp4 = radar.tmp4 / sum(radar.tmp4)*100
radar.tmp=rbind(rep(30,15) ,rep(0,15) , radar.tmp1, radar.tmp2, radar.temp3, radar.tmp4 ,c(0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0)) }
radarchart( radar.tmp  , axistype=1 ,
pcol=c(rgb(1,0,0,0.9),rgb(0,0,1,0.9),rgb(0,1,0,0.9),rgb(0,0,0,0.7),rgb(0,0,0)) , pfcol=c(rgb(1,0,0,0.7), rgb(0,0,1,0.5),rgb(0,1,0,0.3),rgb(0,0,0,0.1),rgb(0,0,0)) , #custom polygon
cglcol="grey", cglty=1, axislabcol="grey", seg=6, caxislabels=seq(0,30,5), cglwd=0.8, pty = 32, plty=1, plwd=c(1,1,1,1,3), #custom the grid
vlcex=0.8 , centerzero=TRUE, #custom labels
title = title )
}
radar3.angle(data, "delta propre", "droit", "aab", "aab delta propre")
radar3.angle(data, "delta propre", "droit", "caa", "caa delta propre")
radar3.angle(data, "delta propre", "droit", "abb", "abb delta propre")
radar3.angle <- function (data, zone, main, angle, title) {
if (angle=="aab"){
tmp1 = subset(data, type==zone & d.g==main & V21=="aab" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="aab" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="aab" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="aab" & V22==1.0) }
if (angle=="abb"){
tmp1 = subset(data, type==zone & d.g==main & V21=="abb" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="abb" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="abb" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="abb" & V22==1.0)}
if (angle=="bbc"){
tmp1 = subset(data, type==zone & d.g==main & V21=="bbc" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="bbc" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="bbc" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="bbc" & V22==1.0) }
if (angle=="bcc"){
tmp1 = subset(data, type==zone & d.g==main & V21=="bcc" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="bcc" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="bcc" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="bcc" & V22==1.0) }
if (angle=="cca"){
tmp1 = subset(data, type==zone & d.g==main & V21=="cca" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="cca" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="cca" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="cca" & V22==1.0) }
if (angle=="caa"){
tmp1 = subset(data, type==zone & d.g==main & V21=="caa" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="caa" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="caa" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="caa" & V22==1.0) }
print(nrow(tmp1));print(nrow(tmp2));print(nrow(tmp3));print(nrow(tmp4))
radar.tmp1 = as.data.frame(matrix(0,ncol=36)) ;colnames(radar.tmp1)=c(seq(90,350,10),seq(0,80,10))
radar.tmp2 = as.data.frame(matrix(0,ncol=36)) ;colnames(radar.tmp2)=c(seq(90,350,10),seq(0,80,10))
radar.tmp3 = as.data.frame(matrix(0,ncol=36)) ;colnames(radar.tmp3)=c(seq(90,350,10),seq(0,80,10))
radar.tmp4 = as.data.frame(matrix(0,ncol=36)) ;colnames(radar.tmp4)=c(seq(90,350,10),seq(0,80,10))
print("Test 0")
if (angle=="aab" | angle=="caa"){
for (i in tmp1[,19]) { radar.tmp1[1,round(i/10-9)%%36+1] = radar.tmp1[1,round(i/10-9)%%36+1]+1 }
for (i in tmp2[,19]) { radar.tmp2[1,round(i/10-9)%%36+1] = radar.tmp2[1,round(i/10-9)%%36+1]+1 }
for (i in tmp3[,19]) { radar.tmp3[1,round(i/10-9)%%36+1] = radar.tmp3[1,round(i/10-9)%%36+1]+1 }
for (i in tmp4[,19]) { radar.tmp4[1,round(i/10-9)%%36+1] = radar.tmp4[1,round(i/10-9)%%36+1]+1 }
radar.tmp1 = radar.tmp1 / sum(radar.tmp1)*100 ; radar.tmp2 = radar.tmp2 / sum(radar.tmp2)*100
radar.tmp3 = radar.tmp3 / sum(radar.tmp3)*100 ; radar.tmp4 = radar.tmp4 / sum(radar.tmp4)*100
radar.tmp=rbind(rep(30,15) ,rep(0,15) , radar.tmp1, radar.tmp2, radar.tmp3, radar.tmp4, c(30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)) }
if (angle=="abb" | angle == "bbc"){print("Test 1")
for (i in 1:nrow(tmp1)) { radar.tmp1[1,round((tmp1[i,19]-tmp1[i,12]+210)/10-9)%%36+1] = radar.tmp1[1,round((tmp1[i,19]-tmp1[i,12]+210)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp2)) { radar.tmp2[1,round((tmp2[i,19]-tmp2[i,12]+210)/10-9)%%36+1] = radar.tmp2[1,round((tmp2[i,19]-tmp2[i,12]+210)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp3)) { radar.tmp3[1,round((tmp3[i,19]-tmp3[i,12]+210)/10-9)%%36+1] = radar.tmp3[1,round((tmp3[i,19]-tmp3[i,12]+210)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp4)) { radar.tmp4[1,round((tmp4[i,19]-tmp4[i,12]+210)/10-9)%%36+1] = radar.tmp4[1,round((tmp4[i,19]-tmp4[i,12]+210)/10-9)%%36+1]+1 }
print("Test 2")
radar.tmp1 = radar.tmp1 / sum(radar.tmp1)*100 ; radar.tmp2 = radar.tmp2 / sum(radar.tmp2)*100
radar.tmp3 = radar.tmp3 / sum(radar.tmp3)*100 ; radar.tmp4 = radar.tmp4 / sum(radar.tmp4)*100
radar.tmp=rbind(rep(30,15) ,rep(0,15) , radar.tmp1, radar.tmp2 , radar.tmp3, radar.tmp4 ,c(0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0)) }
if (angle=="bcc" | angle=="cca"){print("Test 1")
for (i in 1:nrow(tmp1)) { radar.tmp1[1,round((tmp1[i,19]-tmp1[i,13]+330)/10-9)%%36+1] = radar.tmp1[1,round((tmp1[i,19]-tmp1[i,13]+330)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp2)) { radar.tmp2[1,round((tmp2[i,19]-tmp2[i,13]+330)/10-9)%%36+1] = radar.tmp2[1,round((tmp2[i,19]-tmp2[i,13]+330)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp3)) { radar.tmp3[1,round((tmp3[i,19]-tmp3[i,13]+330)/10-9)%%36+1] = radar.tmp3[1,round((tmp3[i,19]-tmp3[i,13]+330)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp4)) { radar.tmp4[1,round((tmp4[i,19]-tmp4[i,13]+330)/10-9)%%36+1] = radar.tmp4[1,round((tmp4[i,19]-tmp4[i,13]+330)/10-9)%%36+1]+1 }
print("Test 2")
radar.tmp1 = radar.tmp1 / sum(radar.tmp1)*100 ; radar.tmp2 = radar.tmp2 / sum(radar.tmp2)*100
radar.tmp3 = radar.tmp3 / sum(radar.tmp3)*100 ; radar.tmp4 = radar.tmp4 / sum(radar.tmp4)*100
radar.tmp=rbind(rep(30,15) ,rep(0,15) , radar.tmp1, radar.tmp2, radar.tmp3, radar.tmp4 ,c(0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0)) }
radarchart( radar.tmp  , axistype=1 ,
pcol=c(rgb(1,0,0,0.9),rgb(0,0,1,0.9),rgb(0,1,0,0.9),rgb(0,0,0,0.7),rgb(0,0,0)) , pfcol=c(rgb(1,0,0,0.7), rgb(0,0,1,0.5),rgb(0,1,0,0.3),rgb(0,0,0,0.1),rgb(0,0,0)) , #custom polygon
cglcol="grey", cglty=1, axislabcol="grey", seg=6, caxislabels=seq(0,30,5), cglwd=0.8, pty = 32, plty=1, plwd=c(1,1,1,1,3), #custom the grid
vlcex=0.8 , centerzero=TRUE, #custom labels
title = title )
}
radar3.angle(data, "delta propre", "droit", "aab", "aab delta propre")
radar3.angle(data, "delta propre", "droit", "caa", "caa delta propre")
radar3.angle(data, "delta propre", "droit", "abb", "abb delta propre")
radar3.angle(data, "delta propre", "droit", "bbc", "bbc delta propre")
radar3.angle(data, "delta propre", "droit", "bcc", "bcc delta propre")
radar3.angle(data, "delta propre", "droit", "cca", "cca delta propre")
radar3.angle(data, "delta propre", "gauche", "aab", "aab delta propre")
radar3.angle(data, "delta propre", "gauche", "caa", "caa delta propre")
radar3.angle(data, "delta propre", "gauche", "abb", "abb delta propre")
radar3.angle(data, "delta propre", "gauche", "bbc", "bbc delta propre")
radar3.angle(data, "delta propre", "gauche", "bcc", "bcc delta propre")
radar3.angle(data, "delta propre", "gauche", "cca", "cca delta propre")
View(data)
radar3.angle(data, "delta de pouce", "droit", "aab", "aab delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "caa", "caa delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "abb", "abb delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "bbc", "bbc delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "bcc", "bcc delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "cca", "cca delta propre droit")
radar3.angle(data, "delta de pouce", "gauche", "aab", "aab delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "caa", "caa delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "abb", "abb delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "bbc", "bbc delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "bcc", "bcc delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "cca", "cca delta de pouce gauche")
pdf("Delta propre droit.pdf",paper="a4",width=7.8,height=11.2,title="Delta propre droit")
layout(matrix(seq(1,6),nrow=3,ncol=2))
par(oma=c(0,0,1.5,0)+0.1,mar=c(2,0,1,0)+0.1)
radar3.angle(data, "delta propre", "droit", "aab", "aab delta propre droit")
radar3.angle(data, "delta propre", "droit", "caa", "caa delta propre droit")
radar3.angle(data, "delta propre", "droit", "abb", "abb delta propre droit")
radar3.angle(data, "delta propre", "droit", "bbc", "bbc delta propre droit")
radar3.angle(data, "delta propre", "droit", "bcc", "bcc delta propre droit")
radar3.angle(data, "delta propre", "droit", "cca", "cca delta propre droit")
dev.off()
pdf("Delta propre droit.pdf",paper="a4",width=7.8,height=11.2,title="Delta propre droit")
layout(matrix(seq(1,6,2),nrow=3,ncol=2))
par(oma=c(0,0,1.5,0)+0.1,mar=c(2,0,1,0)+0.1)
radar3.angle(data, "delta propre", "droit", "aab", "aab delta propre droit")
radar3.angle(data, "delta propre", "droit", "caa", "caa delta propre droit")
radar3.angle(data, "delta propre", "droit", "abb", "abb delta propre droit")
radar3.angle(data, "delta propre", "droit", "bbc", "bbc delta propre droit")
radar3.angle(data, "delta propre", "droit", "bcc", "bcc delta propre droit")
radar3.angle(data, "delta propre", "droit", "cca", "cca delta propre droit")
dev.off()
pdf("Delta propre droit.pdf",paper="a4",width=7.8,height=11.2,title="Delta propre droit")
layout(matrix(c(seq(1,6,2),seq(2,6,2)),nrow=3,ncol=2))
par(oma=c(0,0,1.5,0)+0.1,mar=c(2,0,1,0)+0.1)
radar3.angle(data, "delta propre", "droit", "aab", "aab delta propre droit")
radar3.angle(data, "delta propre", "droit", "caa", "caa delta propre droit")
radar3.angle(data, "delta propre", "droit", "abb", "abb delta propre droit")
radar3.angle(data, "delta propre", "droit", "bbc", "bbc delta propre droit")
radar3.angle(data, "delta propre", "droit", "bcc", "bcc delta propre droit")
radar3.angle(data, "delta propre", "droit", "cca", "cca delta propre droit")
dev.off()
pdf("Radar Chart.pdf",paper="a4",width=7.8,height=11.2)
layout(matrix(c(seq(1,6,2),seq(2,6,2)),nrow=3,ncol=2))
par(oma=c(0,0,1.5,0)+0.1,mar=c(2,0,1,0)+0.1)
radar3.angle(data, "delta propre", "droit", "aab", "aab delta propre droit")
radar3.angle(data, "delta propre", "droit", "caa", "caa delta propre droit")
radar3.angle(data, "delta propre", "droit", "abb", "abb delta propre droit")
radar3.angle(data, "delta propre", "droit", "bbc", "bbc delta propre droit")
radar3.angle(data, "delta propre", "droit", "bcc", "bcc delta propre droit")
radar3.angle(data, "delta propre", "droit", "cca", "cca delta propre droit")
radar3.angle(data, "delta propre", "gauche", "aab", "aab delta propre gauche")
radar3.angle(data, "delta propre", "gauche", "caa", "caa delta propre gauche")
radar3.angle(data, "delta propre", "gauche", "abb", "abb delta propre gauche")
radar3.angle(data, "delta propre", "gauche", "bbc", "bbc delta propre gauche")
radar3.angle(data, "delta propre", "gauche", "bcc", "bcc delta propre gauche")
radar3.angle(data, "delta propre", "gauche", "cca", "cca delta propre gauche")
radar3.angle(data, "delta de pouce", "droit", "aab", "aab delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "caa", "caa delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "abb", "abb delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "bbc", "bbc delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "bcc", "bcc delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "cca", "cca delta propre droit")
radar3.angle(data, "delta de pouce", "gauche", "aab", "aab delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "caa", "caa delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "abb", "abb delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "bbc", "bbc delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "bcc", "bcc delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "cca", "cca delta de pouce gauche")
dev.off()
setwd("/Users/CGrisoni/Documents/workspace/TM Jasmine/04_Traitement des données et matching")
data = read.csv( "/Users/CGrisoni/Documents/workspace/TM Jasmine/02_Extraction des données NIST/data_all.csv" ) ## 48434, 16 var
data = read.csv( "/Users/CGrisoni/Documents/workspace/TM Jasmine/02_Extraction des données NIST/data_all.csv" ) ## 48434, 16 var
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(mosaic)
install.packages("mosaic")
library(mosaic)
install.packages("ggtern")
library(ggtern)
install.packages("reshape2")
library( reshape2 )
install.packages("data.table")
install.packages("fmsb")
library( data.table )
library(fmsb)
data = mutate( data, xc = x.minut - x.centre )
data = mutate( data, yc = y.minut - y.centre )
data = mutate( data, angle.correction = rad2deg(angle.correction))
data = mutate( data, t.minut=(t.minut+180)%%360)
data = mutate( data, tc = t.minut - angle.correction)
data = mutate( data, angle.bc = ((360-angle.b)-(360-angle.c)))
data = mutate( data, theta = tc - phi) #nouveau: est adapté à l'angle de position de la minutie
for (i in 1:nrow(data)) {
if (data[i,20] < 0) {
data[i,20] = data[i,20] + 360
}
if (data[i,16] < 0){
data[i,16] = data[i,16] + 360
}
}
for (i in 1:nrow(data)) {
if (data[i,3]== "delta"){
if (data[i,15] > data[i,11] & data[i,15] < (data[i,11]+data[i,12])/2) {data[i,21] = "aab"}
if (data[i,15] > (data[i,11]+data[i,12])/2 & data[i,15] < data[i,12]) {data[i,21] = "abb"}
if (data[i,15] > data[i,12] & data[i,15] < (data[i,12]+data[i,13])/2) {data[i,21] = "bbc"}
if (data[i,15] > (data[i,12]+data[i,13])/2 & data[i,15] < data[i,13]) {data[i,21] = "bcc"}
if ((data[i,13]+(450-data[i,13])/2)%%360 > 90 & data[i,15] > data[i,13] & data[i,15] < (data[i,13]+(450-data[i,13])/2)%%360 |
(data[i,13]+(450-data[i,13])/2)%%360 < 90 & data[i,15] < (data[i,13]+(450-data[i,13])/2)%%360) {data[i,21] = "cca"}
if ((data[i,13]+(450-data[i,13])/2)%%360 > 90 & (data[i,15] < 90 | data[i,15] > data[i,13]) |
(data[i,13]+(450-data[i,13])/2)%%360 < 90 & data[i,15] > (data[i,13]+(450-data[i,13])/2)%%360 & data[i,15] < 90) {data[i,21] = "caa"}
if (data[i,15] == data[i,11]) {data[i,21] = "a"}
if (data[i,15] == data[i,12]) {data[i,21] = "b"}
if (data[i,15] == data[i,13]) {data[i,21] = "c"}
if (data[i,15] == (data[i,11]+data[i,12])/2) {data[i,21] = "ab"}
if (data[i,15] == (data[i,12]+data[i,13])/2) {data[i,21] = "bc"}
if (data[i,15] == (data[i,13]+(450-data[i,13])/2)%%360) {data[i,21] = "ca"}}}
for (i in 1:nrow(data)){
if (data[i,3] != "zone"){
if (data[i,14] <= 5){
data[i,22] = 0.5
}
if (data[i,14] <= 7 & data[i,14] > 5){
data[i,22] = 0.7
}
if (data[i,14] <= 9 & data[i,14] > 7){
data[i,22] = 0.9
}
if (data[i,14] > 9){
data[i,22] = 1
}
}
}
radar3.angle <- function (data, zone, main, angle, title) {
if (angle=="aab"){
tmp1 = subset(data, type==zone & d.g==main & V21=="aab" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="aab" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="aab" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="aab" & V22==1.0) }
if (angle=="abb"){
tmp1 = subset(data, type==zone & d.g==main & V21=="abb" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="abb" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="abb" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="abb" & V22==1.0)}
if (angle=="bbc"){
tmp1 = subset(data, type==zone & d.g==main & V21=="bbc" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="bbc" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="bbc" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="bbc" & V22==1.0) }
if (angle=="bcc"){
tmp1 = subset(data, type==zone & d.g==main & V21=="bcc" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="bcc" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="bcc" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="bcc" & V22==1.0) }
if (angle=="cca"){
tmp1 = subset(data, type==zone & d.g==main & V21=="cca" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="cca" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="cca" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="cca" & V22==1.0) }
if (angle=="caa"){
tmp1 = subset(data, type==zone & d.g==main & V21=="caa" & V22==0.5)
tmp2 = subset(data, type==zone & d.g==main & V21=="caa" & V22==0.7)
tmp3 = subset(data, type==zone & d.g==main & V21=="caa" & V22==0.9)
tmp4 = subset(data, type==zone & d.g==main & V21=="caa" & V22==1.0) }
print(nrow(tmp1));print(nrow(tmp2));print(nrow(tmp3));print(nrow(tmp4))
radar.tmp1 = as.data.frame(matrix(0,ncol=36)) ;colnames(radar.tmp1)=c(seq(90,350,10),seq(0,80,10))
radar.tmp2 = as.data.frame(matrix(0,ncol=36)) ;colnames(radar.tmp2)=c(seq(90,350,10),seq(0,80,10))
radar.tmp3 = as.data.frame(matrix(0,ncol=36)) ;colnames(radar.tmp3)=c(seq(90,350,10),seq(0,80,10))
radar.tmp4 = as.data.frame(matrix(0,ncol=36)) ;colnames(radar.tmp4)=c(seq(90,350,10),seq(0,80,10))
print("Test 0")
if (angle=="aab" | angle=="caa"){
for (i in tmp1[,19]) { radar.tmp1[1,round(i/10-9)%%36+1] = radar.tmp1[1,round(i/10-9)%%36+1]+1 }
for (i in tmp2[,19]) { radar.tmp2[1,round(i/10-9)%%36+1] = radar.tmp2[1,round(i/10-9)%%36+1]+1 }
for (i in tmp3[,19]) { radar.tmp3[1,round(i/10-9)%%36+1] = radar.tmp3[1,round(i/10-9)%%36+1]+1 }
for (i in tmp4[,19]) { radar.tmp4[1,round(i/10-9)%%36+1] = radar.tmp4[1,round(i/10-9)%%36+1]+1 }
radar.tmp1 = radar.tmp1 / sum(radar.tmp1)*100 ; radar.tmp2 = radar.tmp2 / sum(radar.tmp2)*100
radar.tmp3 = radar.tmp3 / sum(radar.tmp3)*100 ; radar.tmp4 = radar.tmp4 / sum(radar.tmp4)*100
radar.tmp=rbind(rep(30,15) ,rep(0,15) , radar.tmp1, radar.tmp2, radar.tmp3, radar.tmp4, c(30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)) }
if (angle=="abb" | angle == "bbc"){print("Test 1")
for (i in 1:nrow(tmp1)) { radar.tmp1[1,round((tmp1[i,19]-tmp1[i,12]+210)/10-9)%%36+1] = radar.tmp1[1,round((tmp1[i,19]-tmp1[i,12]+210)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp2)) { radar.tmp2[1,round((tmp2[i,19]-tmp2[i,12]+210)/10-9)%%36+1] = radar.tmp2[1,round((tmp2[i,19]-tmp2[i,12]+210)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp3)) { radar.tmp3[1,round((tmp3[i,19]-tmp3[i,12]+210)/10-9)%%36+1] = radar.tmp3[1,round((tmp3[i,19]-tmp3[i,12]+210)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp4)) { radar.tmp4[1,round((tmp4[i,19]-tmp4[i,12]+210)/10-9)%%36+1] = radar.tmp4[1,round((tmp4[i,19]-tmp4[i,12]+210)/10-9)%%36+1]+1 }
print("Test 2")
radar.tmp1 = radar.tmp1 / sum(radar.tmp1)*100 ; radar.tmp2 = radar.tmp2 / sum(radar.tmp2)*100
radar.tmp3 = radar.tmp3 / sum(radar.tmp3)*100 ; radar.tmp4 = radar.tmp4 / sum(radar.tmp4)*100
radar.tmp=rbind(rep(30,15) ,rep(0,15) , radar.tmp1, radar.tmp2 , radar.tmp3, radar.tmp4 ,c(0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0)) }
if (angle=="bcc" | angle=="cca"){print("Test 1")
for (i in 1:nrow(tmp1)) { radar.tmp1[1,round((tmp1[i,19]-tmp1[i,13]+330)/10-9)%%36+1] = radar.tmp1[1,round((tmp1[i,19]-tmp1[i,13]+330)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp2)) { radar.tmp2[1,round((tmp2[i,19]-tmp2[i,13]+330)/10-9)%%36+1] = radar.tmp2[1,round((tmp2[i,19]-tmp2[i,13]+330)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp3)) { radar.tmp3[1,round((tmp3[i,19]-tmp3[i,13]+330)/10-9)%%36+1] = radar.tmp3[1,round((tmp3[i,19]-tmp3[i,13]+330)/10-9)%%36+1]+1 }
for (i in 1:nrow(tmp4)) { radar.tmp4[1,round((tmp4[i,19]-tmp4[i,13]+330)/10-9)%%36+1] = radar.tmp4[1,round((tmp4[i,19]-tmp4[i,13]+330)/10-9)%%36+1]+1 }
print("Test 2")
radar.tmp1 = radar.tmp1 / sum(radar.tmp1)*100 ; radar.tmp2 = radar.tmp2 / sum(radar.tmp2)*100
radar.tmp3 = radar.tmp3 / sum(radar.tmp3)*100 ; radar.tmp4 = radar.tmp4 / sum(radar.tmp4)*100
radar.tmp=rbind(rep(30,15) ,rep(0,15) , radar.tmp1, radar.tmp2, radar.tmp3, radar.tmp4 ,c(0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0)) }
radarchart( radar.tmp  , axistype=1 ,
pcol=c(rgb(1,0,0,0.9),rgb(0,0,1,0.9),rgb(0,1,0,0.9),rgb(0,0,0,0.7),rgb(0,0,0)) , pfcol=c(rgb(1,0,0,0.7), rgb(0,0,1,0.5),rgb(0,1,0,0.3),rgb(0,0,0,0.1),rgb(0,0,0)) , #custom polygon
cglcol="grey", cglty=1, axislabcol="grey", seg=6, caxislabels=seq(0,30,5), cglwd=0.8, pty = 32, plty=1, plwd=c(1,1,1,1,3), #custom the grid
vlcex=0.8 , centerzero=TRUE, #custom labels
title = title )
}
pdf("Radar Chart.pdf",paper="a4",width=7.8,height=11.2)
layout(matrix(c(seq(1,6,2),seq(2,6,2)),nrow=3,ncol=2))
par(oma=c(0,0,1.5,0)+0.1,mar=c(2,0,1,0)+0.1)
radar3.angle(data, "delta propre", "droit", "aab", "aab delta propre droit")
radar3.angle(data, "delta propre", "droit", "caa", "caa delta propre droit")
radar3.angle(data, "delta propre", "droit", "abb", "abb delta propre droit")
radar3.angle(data, "delta propre", "droit", "bbc", "bbc delta propre droit")
radar3.angle(data, "delta propre", "droit", "bcc", "bcc delta propre droit")
radar3.angle(data, "delta propre", "droit", "cca", "cca delta propre droit")
radar3.angle(data, "delta propre", "gauche", "aab", "aab delta propre gauche")
radar3.angle(data, "delta propre", "gauche", "caa", "caa delta propre gauche")
radar3.angle(data, "delta propre", "gauche", "abb", "abb delta propre gauche")
radar3.angle(data, "delta propre", "gauche", "bbc", "bbc delta propre gauche")
radar3.angle(data, "delta propre", "gauche", "bcc", "bcc delta propre gauche")
radar3.angle(data, "delta propre", "gauche", "cca", "cca delta propre gauche")
radar3.angle(data, "delta de pouce", "droit", "aab", "aab delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "caa", "caa delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "abb", "abb delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "bbc", "bbc delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "bcc", "bcc delta propre droit")
radar3.angle(data, "delta de pouce", "droit", "cca", "cca delta propre droit")
radar3.angle(data, "delta de pouce", "gauche", "aab", "aab delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "caa", "caa delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "abb", "abb delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "bbc", "bbc delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "bcc", "bcc delta de pouce gauche")
radar3.angle(data, "delta de pouce", "gauche", "cca", "cca delta de pouce gauche")
dev.off()
data = read.csv( paste(getwd(), "/data_all.csv",sep="" )) ## 48434, 16 var
library(dplyr) # mutate
library(mosaic) # rad2deg
library(spatstat) # ppp, Kest
data = mutate( data, xc = x.minut - x.centre )
data = mutate( data, yc = y.minut - y.centre )
data = mutate( data, angle.correction = rad2deg(angle.correction))
data = mutate( data, t.minut=(t.minut+180)%%360)
data = mutate( data, tc = t.minut - angle.correction)
data = mutate( data, angle.bc = ((360-angle.b)-(360-angle.c)))
data = mutate( data, theta = tc - phi) #nouveau: est adapté à l'angle de position de la minutie
for (i in 1:nrow(data)) {
if (data[i,20] < 0) {
data[i,20] = data[i,20] + 360
}
if (data[i,16] < 0){
data[i,16] = data[i,16] + 360
}
}
pouceD = subset(data, type=="delta de pouce" & d.g=="droit")
pouceG = subset(data, type=="delta de pouce" & d.g=="gauche")
propreD = subset(data, type=="delta propre" & d.g=="droit")
propreG = subset(data, type=="delta propre" & d.g=="gauche")
controlD = subset(data, type=="zone de controle" & d.g=="droit")
controlG = subset(data, type=="zone de controle" & d.g=="gauche")
ppouceDd15 = ppp(pouceD[,17],pouceD[,18], disc(7.5)) ; ppouceGd15 = ppp(pouceG[,17],pouceG[,18], disc(7.5))
ppropreDd15 = ppp(propreD[,17],propreD[,18], disc(7.5)) ; ppropreGd15 = ppp(propreG[,17],propreG[,18], disc(7.5))
pcontrolDd15 = ppp(controlD[,17],controlD[,18], disc(7.5)) ; pcontrolGd15 = ppp(controlG[,17],controlG[,18], disc(7.5))
layout(matrix(c(1,2,3,4,5,6),nrow=2,ncol=3))
par(oma = c(0,0,5,0) + 0.1,mar = c(0,0,0.9,0) + 0.1)
plot(ppouceDd15,main="Delta de pouce",cex.main=1);plot(ppouceGd15,main="")
plot(ppropreDd15,main="Delta propre");plot(ppropreGd15,main="")
plot(pcontrolDd15,main="Zone de contrôle");plot(pcontrolGd15,main="")
title("Disque de diamètre 15 mm", cex.main=2.5, outer=TRUE, ylab="",cex.lab=2)
install.packages("spatstat")
knitr::opts_chunk$set(echo = TRUE)
data = read.csv( paste(getwd(), "/data_all.csv",sep="" )) ## 48434 obs, 16 var
summary(data)
ppouceDd15
data = mutate( data, xc = x.minut - x.centre )
library(dplyr) # mutate
library(mosaic) # rad2deg
library(spatstat) # ppp, Kest
data = mutate( data, xc = x.minut - x.centre )
data = mutate( data, yc = y.minut - y.centre )
data = mutate( data, angle.correction = rad2deg(angle.correction))
data = mutate( data, t.minut=(t.minut+180)%%360)
data = mutate( data, tc = t.minut - angle.correction)
data = mutate( data, angle.bc = ((360-angle.b)-(360-angle.c)))
data = mutate( data, theta = tc - phi) #nouveau: est adapté à l'angle de position de la minutie
for (i in 1:nrow(data)) {
if (data[i,20] < 0) {
data[i,20] = data[i,20] + 360
}
if (data[i,16] < 0){
data[i,16] = data[i,16] + 360
}
}
for (i in 1:nrow(data)) {
if (data[i,20] < 0) {
data[i,20] = data[i,20] + 360
}
if (data[i,16] < 0){
data[i,16] = data[i,16] + 360
}
}
pouceD = subset(data, type=="delta de pouce" & d.g=="droit")
pouceG = subset(data, type=="delta de pouce" & d.g=="gauche")
propreD = subset(data, type=="delta propre" & d.g=="droit")
propreG = subset(data, type=="delta propre" & d.g=="gauche")
controlD = subset(data, type=="zone de controle" & d.g=="droit")
controlG = subset(data, type=="zone de controle" & d.g=="gauche")
pcontrolDd15 = ppp(controlD[,17],controlD[,18], disc(7.5)) ; pcontrolGd15 = ppp(controlG[,17],controlG[,18], disc(7.5))
layout(matrix(c(1,2,3,4,5,6),nrow=2,ncol=3))
par(oma = c(0,5,0,0) + 0.1,mar = c(0,0,0.9,0) + 0.1)
plot(ppouceDd15,main="Thumb delta",cex.main=1, ylab="RIGHT");plot(ppouceGd15,main="")
plot(ppropreDd15,main="Clean delta",col="blue");plot(ppropreGd15,main="")
plot(pcontrolDd15,main="Control zone");plot(pcontrolGd15,main="")
plot(pcontrolDd15,main="Control zone");plot(pcontrolGd15,main="")
title("", cex.main=2, outer=TRUE, font.lab=2, ylab="Left Hand                                      Right Hand",cex.lab=1.2)
plot(ppropreDd15,main="Clean delta",cols="blue")
ppouceDd15 = ppp(pouceD[,17],pouceD[,18], disc(7.5)) ; ppouceGd15 = ppp(pouceG[,17],pouceG[,18], disc(7.5))
ppropreDd15 = ppp(propreD[,17],propreD[,18], disc(7.5)) ; ppropreGd15 = ppp(propreG[,17],propreG[,18], disc(7.5))
pcontrolDd15 = ppp(controlD[,17],controlD[,18], disc(7.5)) ; pcontrolGd15 = ppp(controlG[,17],controlG[,18], disc(7.5))
plot(ppropreDd15,main="Clean delta",cols="blue")
plot(ppropreDd15,main="Clean delta",col="blue")
plot(ppropreDd15,main="Clean delta",cols="blue")
plot(ppropreDd15,main="Clean delta")
plot(ppropreDd15,main="Clean delta",cols=rgb(0,0,1,0.5))
plot(ppropreDd15,main="Clean delta",cols=rgb(0,0,1,0.4))
plot(ppropreDd15,main="Clean delta",cols=rgb(0,0,1,0.1))
plot(ppropreDd15,main="Clean delta",ppropreDd15$window.col=rgb(0,0,1,0.1))
ppouceDd15
ppouceDd15$window
plot(ppropreDd15,main="Clean delta",border=rgb(0,0,1,0.1))
plot(ppropreDd15,main="Clean delta",border=rgb(0,0,1))
